-- INMOS Technical Note 27
-- IMOS Limited
-- 72-TCH-027-00
PROC Whetstone (VAL [11]INT n, VAL INT iterations, INT time0, time1)  
 
  #USE "snglmath.lib" -- this incorporates library code for the functions  
  TIMER time :  
  [4] REAL32 e1 :  
  INT j, k, l :  
  REAL32 t, t1, t2 :  
 
  PROC p3 (VAL REAL32 xdash, ydash, REAL32 z)  
    REAL32 x, y :  
    SEQ  
      x := t * (xdash + ydash)  
      y := t * (x + ydash)  
      z := (x + y) / t2  
  :  
  PROC p0 ()  
    SEQ  
      e1 [j] := e1 [k]  
      e1 [k] := e1 [l]  
      e1 [l] := e1 [j]  
  :  
  PROC pa ([4]REAL32 e)  
    SEQ j = 0 FOR 6  
      SEQ  
        e[0] := (((e[0]    + e[1]) + e[2]) - e[3]) * t  
        e[1] := (((e[0]    + e[1]) - e[2]) + e[3]) * t  
        e[2] := (((e[0]    - e[1]) + e[2]) + e[3]) * t  
        e[3] := ((((-e[0]) + e[1]) + e[2]) + e[3]) / t2  
  :  
  SEQ  
    -- INITIALISE CONSTANTS  
    t  := 0.499975(REAL32)  
    t1 := 0.50025(REAL32)  
    t2 := 2.0(REAL32)  

    -- RECORD START TIME  
    time ? time0  
 
    -- MODULE 1 : SIMPLE IDENTIFIERS  
    REAL32 x1, x2, x3, x4 :  
    SEQ  
      x1 :=  1.0(REAL32)  
      x2 := -1.0(REAL32)  
      x3 := -1.0(REAL32)  
      x4 := -1.0(REAL32)  
      SEQ i = 0 FOR n[0] * iterations  
        SEQ  
          x1 := (((   x1 + x2) + x3) - x4) * t  
          x2 := (((   x1 + x2) - x3) + x4) * t  
          x3 := (((   x1 - x2) + x3) + x4) * t  
          x4 := ((((-x1) + x2) + x3) + x4) * t  
 
    -- MODULE 2 : ARRAY ELEMENTS  
    SEQ  
      e1 [0] :=  1.0(REAL32)  
      e1 [1] := -1.0(REAL32)  
      e1 [2] := -1.0(REAL32)  
      e1 [3] := -1.0(REAL32)  
      SEQ i = 0 FOR n[1] * iterations  
        SEQ  
          e1[0] := (((e1[0]    + e1[1]) + e1[2]) - e1[3]) * t  
          e1[1] := (((e1[0]    + e1[1]) - e1[2]) + e1[3]) * t  
          e1[2] := (((e1[0]    - e1[1]) + e1[2]) + e1[3]) * t  
          e1[3] := ((((-e1[0]) + e1[1]) + e1[2]) + e1[3]) * t  

    -- MODULE 3 : ARRAY AS PARAMETER  
    SEQ i = 0 FOR n[2] * iterations  
      pa (e1)  

    -- MODULE 4 : CONDITIONAL JUMPS  
    SEQ  
      j := 1  
      SEQ i = 0 FOR n[3] * iterations  
        SEQ  
          IF  
            j = 1  
              j := 2  
            TRUE  
              j := 3  
          IF  
            j > 2  
              j := 0  
            TRUE  
              j := 1  
          IF  
            j < 1  
              j := 1  
            TRUE  
              j := 0  

    -- MODULE 5 : OMITTED IN ORIGINAL  
 
    -- MODULE 6 : INTEGER ARITHMETIC  
    SEQ  
      j := 1  
      k := 2  
      l := 3  
      SEQ i = 0 FOR n[5] * iterations  
        SEQ  
          j := (j * (k - j)) * (l - k)  
          k := (l * k) - ((l - j) * k)  
          l := (l - k) * (k + j)  
          e1 [l - 2] := REAL32 ROUND ((j + k) + l)  
          e1 [k - 2] := REAL32 ROUND ((j * k) * l)  
 
    -- MODULE 7 : TRIGONOMETRIC FUNCTIONS  
    REAL32 x, y :  
    SEQ  
      x := 0.5(REAL32)  
      y := 0.5(REAL32)  
      SEQ i = 0 FOR n[6] * iterations  
        SEQ  
          x := t * ATAN ( (t2 * (SIN(x)*COS(x))) /  
                             ((COS(x + y) + COS(x - y)) - 1.0(REAL32)) )  
          y := t * ATAN ( (t2 * (SIN(y)*COS(y))) /  
                             ((COS(x + y) + COS(x - y)) - 1.0(REAL32)) )  
 
    -- MODULE 8 : PROCEDURE CALLS  
    REAL32 x, y, z :  
    SEQ  
      x := 1.0(REAL32)  
      y := 1.0(REAL32)  
      z := 1.0(REAL32)  
      SEQ i = 0 FOR n[7] * iterations  
        p3 (x, y, z)  
 
    -- MODULE 9 : ARRAY REFERENCES  
    SEQ  
      j := 1  
      k := 2  
      l := 3  
      e1 [0] := 1.0(REAL32)  
      e1 [1] := 2.0(REAL32)  
      e1 [2] := 3.0(REAL32)  
      SEQ i = 0 FOR n[8] * iterations  
        p0 ()  
 
    -- MODULE 10 : INTEGER ARITHMETIC  
    SEQ  
      j := 2  
      k := 3  
      SEQ i = 0 FOR n[9] * iterations  
        SEQ  
          j := j + k  
          k := j + k  
          j := k - j  
          k := (k - j) - j  
 
    -- MODULE 11 : STANDARD FUNCTIONS  
    REAL32 x :  
    SEQ  
      x := 0.75(REAL32)  
      SEQ i = 0 FOR n[10] * iterations  
        REAL32 r2 :  
        x := SQRT ( EXP (ALOG (x) /t1) )  
 
    -- RECORD FINISH TIME  
    time ? time1  
:

